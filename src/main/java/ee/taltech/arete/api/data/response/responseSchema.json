{
  "type": "object",
  "id": "urn:jsonschema:ee:taltech:arete:api:data:response:arete:AreteResponse",
  "properties": {
    "type": {
      "type": "string"
    },
    "version": {
      "type": "string"
    },
    "errors": {
      "type": "array",
      "description": "List of style, compilation and other errors",
      "items": {
        "type": "object",
        "id": "urn:jsonschema:ee:taltech:arete:api:data:response:arete:Error",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "kind": {
            "type": "string",
            "description": "Error kind(styleError, compilationError, other)"
          },
          "fileName": {
            "type": "string",
            "description": "File, where error occured"
          },
          "lineNo": {
            "type": "integer",
            "description": "Line, where error occured"
          },
          "columnNo": {
            "type": "integer",
            "description": "Column, where error occured"
          },
          "hint": {
            "type": "string",
            "description": "Hint, to fix the error"
          }
        }
      }
    },
    "files": {
      "type": "array",
      "description": "List of student files",
      "items": {
        "type": "object",
        "id": "urn:jsonschema:ee:taltech:arete:api:data:response:arete:File",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path for the file"
          },
          "contents": {
            "type": "string",
            "description": "File content"
          }
        }
      }
    },
    "testFiles": {
      "type": "array",
      "description": "List of test files",
      "items": {
        "type": "object",
        "$ref": "urn:jsonschema:ee:taltech:arete:api:data:response:arete:File"
      }
    },
    "testSuites": {
      "type": "array",
      "description": "List of test suites which each contains unit-tests. Each test file produces an test suite",
      "items": {
        "type": "object",
        "id": "urn:jsonschema:ee:taltech:arete:api:data:response:arete:TestContext",
        "properties": {
          "unitTests": {
            "type": "array",
            "description": "List of unittests tested",
            "items": {
              "type": "object",
              "id": "urn:jsonschema:ee:taltech:arete:api:data:response:arete:UnitTest",
              "properties": {
                "groupsDependedUpon": {
                  "type": "array",
                  "description": "Groups of unittests this unittest depends on. If any test fails in that group, this test is skipped",
                  "items": {
                    "type": "string"
                  }
                },
                "status": {
                  "type": "string",
                  "description": "Status of the unittest",
                  "enum": [
                    "PASSED",
                    "FAILED",
                    "SKIPPED"
                  ]
                },
                "weight": {
                  "type": "integer",
                  "description": "Test weight"
                },
                "printExceptionMessage": {
                  "type": "boolean",
                  "description": "Boolean whether to show exception message to student or not"
                },
                "printStackTrace": {
                  "type": "boolean",
                  "description": "Boolean whether to show stack trace to student or not"
                },
                "timeElapsed": {
                  "type": "integer",
                  "description": "Time spent on test"
                },
                "methodsDependedUpon": {
                  "type": "array",
                  "description": "Methods depended, otherwise skipped",
                  "items": {
                    "type": "string"
                  }
                },
                "stackTrace": {
                  "type": "string",
                  "description": "Stacktrace"
                },
                "name": {
                  "type": "string",
                  "description": "Test name"
                },
                "stdout": {
                  "type": "array",
                  "description": "List of stdouts",
                  "items": {
                    "type": "object",
                    "id": "urn:jsonschema:ee:taltech:arete:api:data:response:arete:ConsoleOutput",
                    "properties": {
                      "content": {
                        "type": "string",
                        "description": "Std message"
                      }
                    }
                  }
                },
                "exceptionClass": {
                  "type": "string",
                  "description": "Exception class"
                },
                "exceptionMessage": {
                  "type": "string",
                  "description": "Exception message"
                },
                "stderr": {
                  "type": "array",
                  "description": "List of stderrs",
                  "items": {
                    "type": "object",
                    "$ref": "urn:jsonschema:ee:taltech:arete:api:data:response:arete:ConsoleOutput"
                  }
                }
              }
            }
          },
          "name": {
            "type": "string",
            "description": "Test name"
          },
          "file": {
            "type": "string",
            "description": "Test file path"
          },
          "startDate": {
            "type": "integer",
            "description": "Test start time"
          },
          "endDate": {
            "type": "integer",
            "description": "Test end time"
          },
          "weight": {
            "type": "integer",
            "description": "Sum of test weights"
          },
          "passedCount": {
            "type": "integer",
            "description": "Number of passed tests"
          },
          "grade": {
            "type": "number",
            "description": "Total grade for this test file"
          }
        }
      }
    },
    "consoleOutputs": {
      "type": "array",
      "description": "(Appended by arete) Console outputs from docker",
      "items": {
        "type": "object",
        "$ref": "urn:jsonschema:ee:taltech:arete:api:data:response:arete:ConsoleOutput"
      }
    },
    "output": {
      "type": "string",
      "description": "(Overridden by arete) HTML result for student"
    },
    "totalCount": {
      "type": "integer",
      "description": "Number of tests"
    },
    "totalGrade": {
      "type": "string",
      "description": "Passed percentage"
    },
    "totalPassedCount": {
      "type": "integer",
      "description": "Number of passed tests"
    },
    "testingPlatform": {
      "type": "string",
      "description": "(Overridden by arete) Docker image used for testing"
    },
    "root": {
      "type": "string",
      "description": "(Overridden by arete) git path with namespace. iti0102-2019/ex for example"
    },
    "gitTestRepo": {
      "type": "string",
      "description": "(Overridden by arete) URL or ssh for test repository"
    },
    "gitStudentRepo": {
      "type": "string",
      "description": "(Overridden by arete) URL or ssh for student repository"
    },
    "style": {
      "type": "integer",
      "description": "Style percentage. Either from 0 to 100"
    },
    "slug": {
      "type": "string",
      "description": "(Overridden by arete) Slug ran for student. for example pr01_something"
    },
    "returnExtra": {
      "type": "any",
      "description": "(Overridden by arete) values that are returned the same way they were given in"
    },
    "hash": {
      "type": "string",
      "description": "(Overridden by arete) Commit hash from student git repository"
    },
    "uniid": {
      "type": "string",
      "description": "(Overridden by arete) Students uniid"
    },
    "timestamp": {
      "type": "integer",
      "description": "(Overridden by arete if left empty) Testing timestamp"
    },
    "commitMessage": {
      "type": "string",
      "description": "(Overridden by arete) Commit message by student when pushing to repository"
    },
    "priority": {
      "type": "integer",
      "description": "(Overridden by arete) Priority of job on a scale from 1 to 10 inclusive"
    },
    "dockerExtra": {
      "type": "array",
      "description": "(Overridden by arete if left empty) No defaults. You can add (stylecheck) or something. It is sent to smaller tester. Look the possibilities from the small tester repository for more details.",
      "items": {
        "type": "string"
      }
    },
    "systemExtra": {
      "type": "array",
      "description": "(Overridden by arete) No defaults. You can add (anonymous, noMail, noFiles, noTesterFiles, noStudentFiles, noStd, noOverride, noFeedback, minimalFeedback)",
      "items": {
        "type": "string"
      }
    },
    "dockerTimeout": {
      "type": "integer",
      "description": "(Overridden by arete) Default docker timeout is 120 seconds. Maximum allowed code execution time."
    },
    "failed": {
      "type": "boolean",
      "description": "(Overridden by arete if left empty) Whether the testing was successful or not. Will be true if tester crashed."
    }
  }
}
